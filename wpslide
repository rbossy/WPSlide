#!/usr/bin/env python3

from os import listdir
import os.path
from random import shuffle
import urllib.parse
import subprocess
import sys
from time import sleep
from argparse import ArgumentParser
from shlex import quote


DESKTOP = '''[Desktop Entry]
Type=Application
Name=Wallpaper Slideshow
Exec=%s'''


class WPslide(ArgumentParser):
    def __init__(self):
        ArgumentParser.__init__(self, prog='wpslide', description='Wallpaper Slideshow')
        self.add_argument('-d', '--directory', action='store', type=str, dest='picdir', default=os.path.expanduser('~/Pictures'), metavar='DIR', help='path to directory containing picture files (%(default)s)')
        self.add_argument('-t', '--time', action='store', type=int, dest='delay', default=10, metavar='TIME', help='time in minutes between pictures (%(default)smn)')
        self.add_argument('--gsettings', action='store', type=str, dest='gsettings', default='/usr/bin/gsettings', metavar='PATH', help='path to the gsettings executable (%(default)s)')
        self.add_argument('--notify', action='store', type=str, dest='notify', default='/usr/bin/notify-send', metavar='PATH', help='path to the notify executable (%(default)s)')
        self.add_argument('--schema', action='store', type=str, dest='gschema', default='org.gnome.desktop.background', metavar='SCHEMA', help='Gnome property schema for background (%(default)s)')
        self.add_argument('--keys', action='store', type=str, dest='gkeys', default='picture-uri,picture-uri-dark', metavar='KEYS', help='Gnome property keys for background (%(default)s)')
        self.add_argument('-o', '--output', action='store', type=str, dest='output', default=os.path.expanduser('~/.config/autostart/wpslide.desktop'), metavar='PATH', help='file where to write desktop (%(default)s)')
        self.add_argument('action', action='store', type=str, choices=('start', 'desktop'), metavar='ACTION', help='start: start slideshow, desktop: write desktop file')

    def run(self):
        self.args = self.parse_args()
        if self.args.action == 'start':
            self.start()
        elif self.args.action == 'desktop':
            self.desktop()
        else:
            raise RuntimeError('action: %s?' % self.args.action)

    def start(self):
        piclist = listdir(self.args.picdir)
        gkeys = tuple(k.strip() for k in self.args.gkeys.split(','))
        while True:
            shuffle(piclist)
            for pic in piclist:
                abspic = os.path.normpath(os.path.join(self.args.picdir, pic))
                picuri = 'file://' + urllib.parse.quote(abspic)
                for key in gkeys:
                    cmdline = [self.args.gsettings, 'set', self.args.gschema, key, picuri]
                    subprocess.run(cmdline)
                cmdline = [self.args.notify, 'Set wallpaper', '-i', abspic, abspic]
                subprocess.run(cmdline)
                sleep(self.args.delay * 60)

    @staticmethod
    def _mapargs():
        first = True
        picdir = False
        for arg in sys.argv:
            if first:
                yield os.path.abspath(arg)
                first = False
                continue
            if picdir:
                yield os.path.abspath(arg)
                picdir = False
                continue
            if arg == '-d' or arg == '--directory':
                yield arg
                picdir = True
                continue
            if arg == 'desktop':
                yield 'start'
                continue
            yield arg

    def desktop(self):
        cmdline = [quote(arg) for arg in WPslide._mapargs()]
        with open(self.args.output, 'w') as f:
            f.write(DESKTOP % ' '.join(cmdline))


if __name__ == '__main__':
    WPslide().run()
